version: '3'

services:
  nexis_door:
    container_name: nexis_door
    image: nexisltd/door-opener:latest
    depends_on:
      - door-redis
    env_file: .env
    restart: unless-stopped
    networks:
      - proxy
      - door_backend
    volumes:
      - door_images:/app/media
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.door.entrypoints=http"
      - "traefik.http.routers.door.rule=Host(`door.local.nexisltd.com.com`)"
      - "traefik.http.middlewares.door-https-redirect.redirectscheme.scheme=https"
      - "traefik.http.routers.door.middlewares=door-https-redirect"
      - "traefik.http.routers.door-secure.entrypoints=https"
      - "traefik.http.routers.door-secure.rule=Host(`door.local.nexisltd.com`)"
      - "traefik.http.routers.door-secure.tls=true"
      - "traefik.http.routers.door-secure.service=door"
      - "traefik.http.services.door.loadbalancer.server.port=8000"
      - "traefik.docker.network=proxy"

  celery:
    container_name: nexis_door_celery
    image: nexisltd/door-opener:latest
    depends_on:
     - nexis_door
    env_file: .env
    restart: unless-stopped
    networks:
      - door_backend
#    entrypoint: tail -f /dev/null
    entrypoint: celery -A door worker -l INFO
    tty: true

  door-redis:
    container_name: redis
    image: redis:7.4.6-alpine
    networks:
      - door_backend
    volumes:
      - door-redis:/data
    restart: unless-stopped

networks:
  proxy:
    external: true
  door_backend:
volumes:
  door-redis:
  door_images: